"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[952],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=d(n),s=i,h=u["".concat(p,".").concat(s)]||u[s]||c[s]||l;return n?a.createElement(h,r(r({ref:t},m),{},{components:n})):a.createElement(h,r({ref:t},m))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:i,r[1]=o;for(var d=2;d<l;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},2914:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(7462),i=(n(7294),n(3905));const l={sidebar_position:1,description:"Responsible for managing the built-in components"},r="ColorPicker Wrapper",o={unversionedId:"API/ColorPicker",id:"API/ColorPicker",title:"ColorPicker Wrapper",description:"Responsible for managing the built-in components",source:"@site/docs/API/ColorPicker.md",sourceDirName:"API",slug:"/API/ColorPicker",permalink:"/reanimated-color-picker/docs/API/ColorPicker",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Responsible for managing the built-in components"},sidebar:"tutorialSidebar",previous:{title:"API",permalink:"/reanimated-color-picker/docs/category/api"},next:{title:"HueSlider",permalink:"/reanimated-color-picker/docs/API/HueSlider"}},p={},d=[{value:"Props",id:"props",level:2},{value:"<code>value</code>",id:"value",level:3},{value:"<code>sliderThickness</code>",id:"sliderthickness",level:3},{value:"<code>thumbAnimationDuration</code>",id:"thumbanimationduration",level:3},{value:"<code>thumbSize</code>",id:"thumbsize",level:3},{value:"<code>thumbColor</code>",id:"thumbcolor",level:3},{value:"<code>thumbShape</code>",id:"thumbshape",level:3},{value:"<code>thumbStyle</code>",id:"thumbstyle",level:3},{value:"<code>thumbInnerStyle</code>",id:"thumbinnerstyle",level:3},{value:"<code>renderThumb</code>",id:"renderthumb",level:3},{value:"<code>ThumbProps</code>",id:"thumbprops",level:4},{value:"<code>style</code>",id:"style",level:3},{value:"<code>onChange</code>",id:"onchange",level:3},{value:"<code>onComplete</code>",id:"oncomplete",level:3}],m={toc:d};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"colorpicker-wrapper"},"ColorPicker Wrapper"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"ColorPicker")," Wrapper is responsible for managing the built-in components.")),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"All built-in components should be wrapped within the ",(0,i.kt)("inlineCode",{parentName:"p"},"ColorPicker")," component.")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You can nest components within the ",(0,i.kt)("inlineCode",{parentName:"li"},"ColorPicker")," wrapper to achieve the desired level of customization.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"<ColorPicker>\n  <Preview />\n\n  <View>\n    <Panel1 />\n    <HueSlider vertical />\n  </View>\n\n  <View>\n    <Text>Opacity</Text>\n    <OpacitySlider />\n  </View>\n\n  <Swatches />\n</ColorPicker>\n")),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("h3",{id:"value"},(0,i.kt)("inlineCode",{parentName:"h3"},"value")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The initial color that should be displayed when the ",(0,i.kt)("inlineCode",{parentName:"li"},"ColorPicker")," is loaded."),(0,i.kt)("li",{parentName:"ul"},"If the ",(0,i.kt)("inlineCode",{parentName:"li"},"value")," property is modified, the ",(0,i.kt)("inlineCode",{parentName:"li"},"ColorPicker")," will automatically update the displayed color."),(0,i.kt)("li",{parentName:"ul"},"Accepts: ",(0,i.kt)("inlineCode",{parentName:"li"},"'hex' | 'rgb' | 'rgba' | 'hsl' | 'hsla' | 'hsv' | 'hsva' | 'hwb' | 'hwba' | named colors")," formats."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type: string")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default: '#418181'"))),(0,i.kt)("h3",{id:"sliderthickness"},(0,i.kt)("inlineCode",{parentName:"h3"},"sliderThickness")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A global property that allows for changing the thickness of all descendant slider components."),(0,i.kt)("li",{parentName:"ul"},"The thickness refers to the ",(0,i.kt)("inlineCode",{parentName:"li"},"width")," of the slider in the case of a ",(0,i.kt)("inlineCode",{parentName:"li"},"vertical")," orientation, and the ",(0,i.kt)("inlineCode",{parentName:"li"},"height")," in the case of a ",(0,i.kt)("inlineCode",{parentName:"li"},"horizontal")," orientation."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type: number")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default: 25"))),(0,i.kt)("h3",{id:"thumbanimationduration"},(0,i.kt)("inlineCode",{parentName:"h3"},"thumbAnimationDuration")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A global property to change the duration which the thumbs animate when the value prop changes."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type: number")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default: 200"))),(0,i.kt)("h3",{id:"thumbsize"},(0,i.kt)("inlineCode",{parentName:"h3"},"thumbSize")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A global property for changing the thumb size of all descendant slider components."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type: number")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default: 35"))),(0,i.kt)("h3",{id:"thumbcolor"},(0,i.kt)("inlineCode",{parentName:"h3"},"thumbColor")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A global property for changing the thumb color of all descendant slider components."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type: string")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default: undefined"))),(0,i.kt)("h3",{id:"thumbshape"},(0,i.kt)("inlineCode",{parentName:"h3"},"thumbShape")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A global property that allows for the alteration of the thumb shape and appearance of all descendant slider components."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type: string")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default: 'ring'")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"values:"),(0,i.kt)("shapes",null))),(0,i.kt)("h3",{id:"thumbstyle"},(0,i.kt)("inlineCode",{parentName:"h3"},"thumbStyle")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A global property to change the style of the thumb's View for all descendant sliders components."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type: ViewStyle"))),(0,i.kt)("h3",{id:"thumbinnerstyle"},(0,i.kt)("inlineCode",{parentName:"h3"},"thumbInnerStyle")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A global property to change the color of the thumb's inner View(s) for all descendant sliders components."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type: ViewStyle"))),(0,i.kt)("h3",{id:"renderthumb"},(0,i.kt)("inlineCode",{parentName:"h3"},"renderThumb")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A global property for using the same custom thumb for all descendant slider components."),(0,i.kt)("li",{parentName:"ul"},"Function which receives ",(0,i.kt)("inlineCode",{parentName:"li"},"ThumbProps")," and returns a custom thumb component."),(0,i.kt)("li",{parentName:"ul"},"Overrides ",(0,i.kt)("inlineCode",{parentName:"li"},"thumbShape"))),(0,i.kt)("h4",{id:"thumbprops"},(0,i.kt)("inlineCode",{parentName:"h4"},"ThumbProps")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"Prop"),(0,i.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"positionStyle")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"StyleProp")),(0,i.kt)("td",{parentName:"tr",align:"left"},"This style determines the position of the thumb and is a crucial element that should be included.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"width")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Extracted from the ",(0,i.kt)("inlineCode",{parentName:"td"},"thumbSize")," prop and it's important for thumb position calculation.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"height")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Extracted from the ",(0,i.kt)("inlineCode",{parentName:"td"},"thumbSize")," prop and it's important for thumb position calculation.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"adaptiveColor")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"SharedValue<string>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"White or black based on the contrast ratio.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"currentColor")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"SharedValue<string>")),(0,i.kt)("td",{parentName:"tr",align:"left"},"This shared value will update whenever the color changes.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"initialColor")),(0,i.kt)("td",{parentName:"tr",align:"center"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The initial color value as a ",(0,i.kt)("inlineCode",{parentName:"td"},"string"),".")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Example Usage:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import Animated, { useAnimatedStyle } from 'react-native-reanimated';\nimport type { RenderThumbProps } from 'reanimated-color-picker';\n\nfunction MyCustomThumb({\n  width,\n  height,\n  positionStyle,\n  adaptiveColor,\n  currentColor,\n  initialColor,\n}: RenderThumbProps) {\n\n  const animatedStyle = useAnimatedStyle(() => ({\n    borderColor: adaptiveColor.value,\n    backgroundColor: currentColor.value,\n  }));\n\n  return (\n    <Animated.View\n      style={[\n        { width, height, borderWidth: 1, borderRadius: width / 2, overflow: 'hidden' },\n        animatedStyle,\n        positionStyle,\n        ]}\n    >\n      <View style={{ backgroundColor: initialColor, width: '50%', height, alignSelf: 'flex-end' }} />\n    </Animated.View>\n  );\n}\n")),(0,i.kt)("h3",{id:"style"},(0,i.kt)("inlineCode",{parentName:"h3"},"style")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The container style of the ",(0,i.kt)("inlineCode",{parentName:"li"},"ColorPicker"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type: ViewStyle"))),(0,i.kt)("admonition",{title:"note",type:"info"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Certain style properties will be overridden."))),(0,i.kt)("h3",{id:"onchange"},(0,i.kt)("inlineCode",{parentName:"h3"},"onChange")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Triggers every time the user modifies the color."),(0,i.kt)("li",{parentName:"ul"},"The passed color object has the following properties: ",(0,i.kt)("inlineCode",{parentName:"li"},"hex"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"rgb"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"rgba"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"hsv"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"hsva"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"hwb"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"hwba"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"hsl"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"hsla")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type: (color: object) => void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default: null"))),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"To prevent performance issues, it is best to avoid using ",(0,i.kt)("inlineCode",{parentName:"li"},"setState")," in the ",(0,i.kt)("inlineCode",{parentName:"li"},"onChange")," callback."),(0,i.kt)("li",{parentName:"ul"},"It is highly recommended to utilize the ",(0,i.kt)("inlineCode",{parentName:"li"},"useSharedValue")," function from the ",(0,i.kt)("inlineCode",{parentName:"li"},"react-native-reanimated")," library."))),(0,i.kt)("h3",{id:"oncomplete"},(0,i.kt)("inlineCode",{parentName:"h3"},"onComplete")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Triggered upon the user releasing the slider handle or clicking on a swatch."),(0,i.kt)("li",{parentName:"ul"},"The passed color object has the following properties: ",(0,i.kt)("inlineCode",{parentName:"li"},"hex"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"rgb"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"rgba"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"hsv"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"hsva"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"hwb"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"hwba"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"hsl"),", and ",(0,i.kt)("inlineCode",{parentName:"li"},"hsla")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"type: (color: object) => void")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default: null"))))}u.isMDXComponent=!0}}]);